{"version":3,"sources":["components/Common/FormControls/FormControls.module.css","components/Common/FormControls/FormControls.js","utils/validator/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","FormControl","Element","input","meta","props","child","hasError","touched","error","className","s","formControls","requiredField","value","maxLengthCreator","maxLength","length","DialogItem","path","id","dialog","active","to","name","Message","message","textarea","maxLength50","AddMesageFormRedux","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","dialogs_message","Field","component","validate","placeholder","dialogs_send","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogs_container","dialogs_items","values","sendMessage","newMessageBody","compose","connect","sendMessageActionCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,iBAAmB,yC,uHCE9GC,EAAc,SAAAC,GAAO,OAAI,YAAuC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,MAAsB,yCAClEC,EAAWH,EAAKI,SAAWJ,EAAKK,MACtC,OACI,sBAAKC,UAAWC,IAAEC,aAAe,KAAOL,EAAWI,IAAEF,MAAQ,IAA7D,UACI,cAACP,EAAD,2BAAaC,GAAWE,IACvBE,GAAY,+BAAOH,EAAKK,c,iCCRrC,oEAAO,IAAMI,EAAgB,SAAAC,GACzB,IAAIA,EAEJ,MAAO,qBAIEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAE5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCRlCjB,EAAOC,QAAU,CAAC,QAAU,yBAAyB,kBAAoB,mCAAmC,cAAgB,+BAA+B,OAAS,wBAAwB,gBAAkB,iCAAiC,aAAe,gC,oBCA9PD,EAAOC,QAAU,CAAC,cAAgB,oC,oBCAlCD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,2B,8GCalDkB,EAVI,SAACb,GAClB,IAAIc,EAAO,YAAcd,EAAMe,GAE/B,OACE,qBAAKV,UAAWC,IAAEU,OAAS,IAAMV,IAAEW,OAAnC,SACE,cAAC,IAAD,CAASC,GAAIJ,EAAb,SAAoBd,EAAMmB,U,kBCEjBC,EARC,SAACpB,GACf,OACE,qBAAKK,UAAWC,IAAEe,QAAlB,SACGrB,EAAMqB,W,mDCGPC,EAAW1B,YAAY,YACvB2B,EAAcb,YAAiB,IA8C/Bc,EAAqBC,YAAU,CACnCC,KAAM,sBACNC,gBALkB,SAACC,EAAQC,GAAT,OAClBA,EAASC,YAAM,0BAEUL,EAhBL,SAACzB,GACrB,OACE,uBAAM+B,SAAU/B,EAAMgC,aAAtB,UACE,qBAAK3B,UAAWC,IAAE2B,gBAAlB,SACE,cAACC,EAAA,EAAD,CAAOC,UAAWb,EAAUc,SAAU,CAAC5B,IAAee,GAAcJ,KAAM,iBAAkBkB,YAAa,yBAE3G,qBAAKhC,UAAWC,IAAEgC,aAAlB,SACE,kDAcOC,EAjDC,SAACvC,GAEf,IAAIwC,EAAQxC,EAAMyC,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,MAAW0B,EAAE9B,OAC1E+B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,SAAc2B,EAAEjC,OAMnF,OAAKf,EAAMiD,OAGT,qBAAK5C,UAAWC,IAAEqC,QAAlB,SACE,sBAAKtC,UAAWC,IAAE4C,kBAAlB,UACE,qBAAK7C,UAAWC,IAAE6C,cAAlB,SACE,8BAAMT,MAER,sBAAKrC,UAAWC,IAAE6C,cAAlB,UACE,8BAAML,IACN,cAACtB,EAAD,CAAoBO,SAdR,SAACqB,GACnBpD,EAAMqD,YAAYD,EAAOE,2BAGD,cAAC,IAAD,CAAUpC,GAAI,Y,wBCF3BqC,sBACbC,aAfoB,SAAChB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACZ,GACxB,MAAO,CACLwB,YAAa,SAACC,GACZzB,EAAS4B,YAAyBH,SAOtCI,IAFaH,CAGbhB","file":"static/js/5.4da42fde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__3Zr3_\",\"error\":\"FormControls_error__1Z42I\",\"formSummaryError\":\"FormControls_formSummaryError__WuDVV\"};","import React from 'react';\r\nimport s from './FormControls.module.css';\r\n\r\nexport const FormControl = Element => ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControls + ' ' + (hasError ? s.error : '')}>\r\n            <Element {...input} {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const requiredField = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    // debugger\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3KuMc\",\"dialogs_container\":\"Dialogs_dialogs_container__1H-GS\",\"dialogs_items\":\"Dialogs_dialogs_items__SWmJn\",\"active\":\"Dialogs_active__36D_H\",\"dialogs_message\":\"Dialogs_dialogs_message__1pwdF\",\"dialogs_send\":\"Dialogs_dialogs_send__Xh8MU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_items\":\"DialogItem_dialogs_items__1xi7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__2NZJa\",\"message\":\"Message_message__2bC3L\"};","import React from 'react';\nimport s from './DialogItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n\n  return (\n    <div className={s.dialog + ' ' + s.active}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  )\n}\n\nexport default DialogItem;\n","import React from 'react';\nimport s from './Message.module.css';\n\nconst Message = (props) => {\n  return (\n    <div className={s.message}>\n      {props.message}\n    </div>\n  )\n}\n\nexport default Message;\n","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { reduxForm, Field, reset } from 'redux-form';\nimport { requiredField, maxLengthCreator } from '../../utils/validator/validators';\nimport { FormControl } from '../Common/FormControls/FormControls';\n\nconst textarea = FormControl('textarea');\nconst maxLength50 = maxLengthCreator(50);\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogsPage;\n\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} />);\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  }\n\n  if (!props.isAuth) return <Redirect to={\"/login\"} />\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogs_container}>\n        <div className={s.dialogs_items}>\n          <div>{dialogsElements}</div>\n        </div>\n        <div className={s.dialogs_items}>\n          <div>{messagesElements}</div>\n          <AddMesageFormRedux onSubmit={addNewMessage} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst AddMesageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={s.dialogs_message}>\n        <Field component={textarea} validate={[requiredField, maxLength50]} name={\"newMessageBody\"} placeholder={\"Enter your message\"} />\n      </div>\n      <div className={s.dialogs_send}>\n        <button>Send</button>\n      </div>\n    </form>\n  )\n}\n\nconst afterSubmit = (result, dispatch) =>\n  dispatch(reset('dialogAddMesageForm'));\n\nconst AddMesageFormRedux = reduxForm({\n  form: \"dialogAddMesageForm\",\n  onSubmitSuccess: afterSubmit,\n})(AddMesageForm);\n\nexport default Dialogs;\n","import { sendMessageActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageActionCreator(newMessageBody));\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}