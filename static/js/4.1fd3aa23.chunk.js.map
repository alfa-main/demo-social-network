{"version":3,"sources":["components/Common/FormControls/FormControls.module.css","components/Common/FormControls/FormControls.js","utils/validator/validators.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.module.css","components/Profile/ProfileInfo/ProfileData/ProfileData.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileData/ProfileData.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","FormControl","Element","input","meta","props","child","hasError","touched","error","className","s","formControls","requiredField","value","maxLengthCreator","maxLength","length","Post","post","message","likesCount","textarea","maxLength10","AddNewPostForm","React","memo","onSubmit","handleSubmit","Field","component","validate","name","placeholder","AddNewPostFormRedux","reduxForm","form","MyPosts","postsElements","posts","map","p","id","posts_block","values","addPost","newPostBody","MyPostsContainer","connect","state","profilePage","dispatch","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","profile_status","status_input","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","defaultValue","onDoubleClick","ProfileDataFormReduxForm","profile","formStyles","formSummaryError","profile_form","type","contacts_caption","Object","keys","contacts","key","contact","profile_contacts","profile_save","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","profile_data","profile_item","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","profile_edit","onClick","ProfileInfo","savePhoto","saveProfile","Preloader","description_block","description_photo","src","photos","large","userPhoto","alt","description_file","target","files","initialValues","formData","then","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.1fd3aa23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__3Zr3_\",\"error\":\"FormControls_error__1Z42I\",\"formSummaryError\":\"FormControls_formSummaryError__WuDVV\"};","import React from 'react';\r\nimport s from './FormControls.module.css';\r\n\r\nexport const FormControl = Element => ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControls + ' ' + (hasError ? s.error : '')}>\r\n            <Element {...input} {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const requiredField = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    // debugger\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1Bi33\",\"posts_block\":\"MyPosts_posts_block__162SU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description_block\":\"ProfileInfo_description_block__ye2ih\",\"contact\":\"ProfileInfo_contact__KBWJl\",\"description_photo\":\"ProfileInfo_description_photo__1Yrqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_status\":\"ProfileStatus_profile_status__2I7kn\",\"status_input\":\"ProfileStatus_status_input__2jaB3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_save\":\"ProfileDataForm_profile_save__NgeVY\",\"profile_form\":\"ProfileDataForm_profile_form__1W1Im\",\"profile_contacts\":\"ProfileDataForm_profile_contacts__38cjY\",\"contacts_caption\":\"ProfileDataForm_contacts_caption__2zsux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_data\":\"ProfileData_profile_data__3X47u\",\"profile_item\":\"ProfileData_profile_item__98QcC\",\"contact\":\"ProfileData_contact__2N6Ii\",\"profile_edit\":\"ProfileData_profile_edit__2liDB\"};","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={s.post}>\n      {props.message}\n      <span>like</span> {props.likesCount}\n    </div>\n  );\n}\n\nexport default Post;\n\n","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { reduxForm, Field } from 'redux-form';\nimport { requiredField, maxLengthCreator } from '../../../utils/validator/validators';\nimport { FormControl } from '../../Common/FormControls/FormControls';\n\nconst textarea = FormControl('textarea');\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = (props) => {\n  let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\n\n  let addNewPost = (values) => {\n    props.addPost(values.newPostBody);\n  }\n\n  return (\n    <div className={s.posts_block}>\n      <div>\n        My posts\n        <AddNewPostFormRedux onSubmit={addNewPost} />\n        <div className={s.posts}>\n          {postsElements}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nconst AddNewPostForm = React.memo((props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={textarea} validate={[requiredField, maxLength10]} name={\"newPostBody\"} placeholder={\"Enter your Post\"} />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n})\n\nconst AddNewPostFormRedux = reduxForm({\n  form: \"profileAddPostForm\"\n})(AddNewPostForm);\n\nexport default MyPosts;\n","import { addPost } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPost(newPostBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile_status}>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {!props.status ? \"---\" : props.status}\r\n                    </span>\r\n                </div>\r\n                : <div>\r\n                    <input className={s.status_input} onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} defaultValue={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileDataForm.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { FormControl } from '../../../Common/FormControls/FormControls';\r\nimport formStyles from '../../../Common/FormControls/FormControls.module.css';\r\n\r\nconst input = FormControl('input');\r\nconst textarea = FormControl('textarea');\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {error && <div className={formStyles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div className={s.profile_form}>\r\n                <p>Full name:</p> <Field\r\n                    type={'text'}\r\n                    component={input}\r\n                    name={\"fullName\"}\r\n                    placeholder={\"Full name\"} />\r\n            </div>\r\n            <div className={s.profile_form}>\r\n                <p>Looking for a job:</p> <Field\r\n                    type={'checkbox'}\r\n                    component={input}\r\n                    name={\"lookingForAJob\"}\r\n                    placeholder={\"looking for a job\"} />\r\n            </div>\r\n            <div className={s.profile_form}>\r\n                <p>My professional skills:</p> <Field\r\n                    component={textarea}\r\n                    name={\"lookingForAJobDescription\"}\r\n                    placeholder={\"My professional skills\"} />\r\n            </div>\r\n            <div className={s.profile_form}>\r\n                <p>About me:</p> <Field\r\n                    component={textarea}\r\n                    name={\"aboutMe\"}\r\n                    placeholder={\"About me\"} />\r\n            </div>\r\n            <div className={s.profile_form}>\r\n                <p className={s.contacts_caption}>Contacts:</p> {Object.keys(profile.contacts).map(key => {\r\n                    return <div className={s.contact} key={key}>\r\n                        <div className={s.profile_contacts}>\r\n                            <span>{key}:</span>  <Field\r\n                                type={'text'}\r\n                                component={input}\r\n                                name={\"contacts.\" + key}\r\n                                placeholder={key} />\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n            <div>\r\n                <button className={s.profile_save}>Save</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n    form: \"editProfile\"\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React from 'react';\r\nimport s from './ProfileData.module.css';\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return (\r\n        <div className={s.profile_data}>\r\n            <div className={s.profile_item}>\r\n                <span>Fullname:</span> {profile.fullName}\r\n            </div>\r\n            <div className={s.profile_item}>\r\n                <span>Looking for a job:</span> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div className={s.profile_item}>\r\n                    <span>My professional skills:</span> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div className={s.profile_item}>\r\n                <span>About me:</span> {profile.aboutMe}\r\n            </div>\r\n            <div className={s.profile_item}>\r\n                <span>Contacts:</span> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n            {isOwner && <div><button className={s.profile_edit} onClick={goToEditMode}>Edit</button></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={s.contact}>{contactTitle}: {contactValue}</div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React, { useState } from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from '../../../assets/img/images.png';\nimport ProfileDataForm from './ProfileData/ProfileDataForm';\nimport ProfileData from './ProfileData/ProfileData';\n\nconst ProfileInfo = ({ profile, updateStatus, status, isOwner, savePhoto, saveProfile }) => {\n  let [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  }\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  }\n  return (\n    <div>\n      <div className={s.description_block}>\n        <div className={s.description_photo}>\n          <img src={profile.photos.large || userPhoto} alt='large' />\n        </div>\n        <div className={s.description_file}>\n          {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\n        </div>\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n      {editMode ? <ProfileDataForm initialValues={profile} onSubmit={onSubmit} profile={profile} /> :\n        <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => { setEditMode(true) }} />}\n    </div>\n  );\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}