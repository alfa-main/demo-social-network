{"version":3,"sources":["components/Common/FormControls/FormControls.module.css","utils/validator/validators.js","components/Common/FormControls/FormControls.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","requiredField","value","maxLengthCreator","maxLength","length","FormControl","Element","input","meta","props","child","hasError","touched","error","className","s","formControls","Post","post","message","likesCount","textarea","maxLength10","AddNewPostForm","React","memo","onSubmit","handleSubmit","Field","component","validate","name","placeholder","AddNewPostFormRedux","reduxForm","form","MyPosts","postsElements","posts","map","p","id","posts_block","values","addPost","newPostBody","MyPostsContainer","connect","state","profilePage","dispatch","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","defaultValue","onDoubleClick","ProfileInfo","profile","content_img","src","alt","description_block","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/5.7313bcdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__3Zr3_\",\"error\":\"FormControls_error__1Z42I\",\"formSummaryError\":\"FormControls_formSummaryError__WuDVV\"};","export const requiredField = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    // debugger\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n\r\n}","import React from 'react';\r\nimport s from './FormControls.module.css';\r\n\r\nexport const FormControl = Element => ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControls + ' ' + (hasError ? s.error : '')}>\r\n            <Element {...input} {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1Bi33\",\"posts_block\":\"MyPosts_posts_block__162SU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_img\":\"ProfileInfo_content_img__27aIn\",\"description_block\":\"ProfileInfo_description_block__ye2ih\"};","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={s.post}>\n      {props.message}\n      <span>like</span> {props.likesCount}\n    </div>\n  );\n}\n\nexport default Post;\n\n","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { reduxForm, Field } from 'redux-form';\nimport { requiredField, maxLengthCreator } from '../../../utils/validator/validators';\nimport { FormControl } from '../../Common/FormControls/FormControls';\n\nconst textarea = FormControl('textarea');\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = (props) => {\n\n  let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\n\n  let addNewPost = (values) => {\n    props.addPost(values.newPostBody);\n  }\n\n  return (\n    <div className={s.posts_block}>\n      <div>\n        My posts\n        <AddNewPostFormRedux onSubmit={addNewPost} />\n        <div className={s.posts}>\n          {postsElements}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nconst AddNewPostForm = React.memo((props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={textarea} validate={[requiredField, maxLength10]} name={\"newPostBody\"} placeholder={\"Enter your Post\"} />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n})\n\nconst AddNewPostFormRedux = reduxForm({\n  form: \"profileAddPostForm\"\n})(AddNewPostForm);\n\nexport default MyPosts;\n","import { addPost } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPost(newPostBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {!props.status ? \"---\" : props.status}\r\n                    </span>\r\n                </div>\r\n                : <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} defaultValue={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = ({ profile, updateStatus, status }) => {\n  if (!profile) {\n    return <Preloader />\n  }\n  return (\n    <div>\n      <div>\n        <img className={s.content_img} src=\"https://bipbap.ru/wp-content/uploads/2017/04/0_7c779_5df17311_orig.jpg\" alt=\"icon\" />\n      </div>\n      <div className={s.description_block}>\n        <img src={profile.photos.large} alt='large' />\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profileReducer';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}