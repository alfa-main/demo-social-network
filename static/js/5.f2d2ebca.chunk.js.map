{"version":3,"sources":["components/Common/FormControls/FormControls.module.css","components/Common/FormControls/FormControls.js","utils/validator/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","FormControl","Element","input","meta","props","child","hasError","touched","error","className","s","formControls","requiredField","value","maxLengthCreator","maxLength","length","DialogItem","path","id","dialog","active","to","name","Message","message","textarea","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmitSuccess","dispatch","reset","onSubmit","handleSubmit","dialogs_message","Field","component","validate","placeholder","dialogs_send","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogs_container","dialogs_items","values","sendMessage","newMessageBody","compose","connect","actions","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,iBAAmB,yC,uHCE9GC,EAAc,SAAAC,GAAO,OAAI,YAAuC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,MAAsB,yCAClEC,EAAWH,EAAKI,SAAWJ,EAAKK,MACtC,OACI,sBAAKC,UAAWC,IAAEC,aAAe,KAAOL,EAAWI,IAAEF,MAAQ,IAA7D,UACI,cAACP,EAAD,2BAAaC,GAAWE,IACvBE,GAAY,+BAAOH,EAAKK,c,iCCRrC,oEAAO,IAAMI,EAAgB,SAAAC,GACzB,IAAIA,EAEJ,MAAO,qBAIEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAE5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCRlCjB,EAAOC,QAAU,CAAC,QAAU,yBAAyB,kBAAoB,mCAAmC,cAAgB,+BAA+B,OAAS,wBAAwB,gBAAkB,iCAAiC,aAAe,gC,oBCA9PD,EAAOC,QAAU,CAAC,cAAgB,oC,oBCAlCD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,2B,sHCiBlDkB,EAV8B,SAACb,GAC5C,IAAIc,EAAO,YAAcd,EAAMe,GAE/B,OACE,qBAAKV,UAAWC,IAAEU,OAAS,IAAMV,IAAEW,OAAnC,SACE,cAAC,IAAD,CAASC,GAAIJ,EAAb,SAAoBd,EAAMmB,U,kBCCjBC,EARyB,SAACpB,GACvC,OACE,qBAAKK,UAAWC,IAAEe,QAAlB,SACGrB,EAAMqB,W,4CCAPC,EAAW1B,YAAY,YACvB2B,EAAcb,YAAiB,IAgD/Bc,EAAsBC,YAAU,CACpCC,KAAM,uBACNC,gBALkB,SAACC,GAAD,OAClBA,EAASC,YAAM,2BAEWJ,EAhBL,SAACzB,GACtB,OACE,uBAAM8B,SAAU9B,EAAM+B,aAAtB,UACE,qBAAK1B,UAAWC,IAAE0B,gBAAlB,SACE,cAACC,EAAA,EAAD,CAAOC,UAAWZ,EAAUa,SAAU,CAAC3B,IAAee,GAAcJ,KAAM,iBAAkBiB,YAAa,yBAE3G,qBAAK/B,UAAWC,IAAE+B,aAAlB,SACE,kDAcOC,EA9CsB,SAACtC,GAEpC,IAAIuC,EAAQvC,EAAMwC,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYzB,KAAMyB,EAAEzB,KAAiBJ,GAAK6B,EAAE7B,IAAb6B,EAAE7B,OAC1E8B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,SAAc0B,EAAEhC,OAMnF,OACE,qBAAKV,UAAWC,IAAEoC,QAAlB,SACE,sBAAKrC,UAAWC,IAAE0C,kBAAlB,UACE,qBAAK3C,UAAWC,IAAE2C,cAAlB,SACE,8BAAMR,MAER,sBAAKpC,UAAWC,IAAE2C,cAAlB,UACE,8BAAMJ,IACN,cAACrB,EAAD,CAAqBM,SAZT,SAACoB,GACnBlD,EAAMmD,YAAYD,EAAOE,4B,yBCCdC,sBACbC,aAPoB,SAACf,GACrB,MAAO,CACLC,YAAaD,EAAMC,eAKd,eAA+Ee,MACtFC,IAFaH,CAGbf","file":"static/js/5.f2d2ebca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls___5AgI\",\"error\":\"FormControls_error__2MtEI\",\"formSummaryError\":\"FormControls_formSummaryError__2gaZG\"};","import React from 'react';\nimport s from './FormControls.module.css';\n\nexport const FormControl = Element => ({ input, meta, child, ...props }) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={s.formControls + ' ' + (hasError ? s.error : '')}>\n            <Element {...input} {...props} />\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}","export const requiredField = value => {\n    if (value) return undefined;\n\n    return 'Field is required';\n\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    // debugger\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n    return undefined;\n\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__16KaI\",\"dialogs_container\":\"Dialogs_dialogs_container__JhEan\",\"dialogs_items\":\"Dialogs_dialogs_items__3gFk8\",\"active\":\"Dialogs_active__259I5\",\"dialogs_message\":\"Dialogs_dialogs_message__1R86p\",\"dialogs_send\":\"Dialogs_dialogs_send__3O-Fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_items\":\"DialogItem_dialogs_items__1Fwp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__2ZrJA\",\"message\":\"Message_message__1ljA7\"};","import s from './DialogItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\ntype DialogItemType = {\n  name: string\n  id: number\n}\n\nconst DialogItem: React.FC<DialogItemType> = (props) => {\n  let path = \"/dialogs/\" + props.id;\n\n  return (\n    <div className={s.dialog + ' ' + s.active}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  )\n}\n\nexport default DialogItem;\n","import s from './Message.module.css';\n\ntype MessageProps = {\n  message: string\n}\n\nconst Message: React.FC<MessageProps> = (props) => {\n  return (\n    <div className={s.message}>\n      {props.message}\n    </div>\n  )\n}\n\nexport default Message;\n","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { reduxForm, Field, reset } from 'redux-form';\nimport { requiredField, maxLengthCreator } from '../../utils/validator/validators';\nimport { FormControl } from '../Common/FormControls/FormControls';\nimport { InitialStateType } from '../../redux/dialogsReducer';\n\nconst textarea = FormControl('textarea');\nconst maxLength50 = maxLengthCreator(50);\n\ntype PropsType = {\n  dialogsPage: InitialStateType\n  sendMessage: any\n}\n\nconst Dialogs: React.FC<PropsType> = (props) => {\n\n  let state = props.dialogsPage;\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={ d.id }/>);\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\n\n  let addNewMessage = (values: any) => {\n    props.sendMessage(values.newMessageBody);\n  }\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogs_container}>\n        <div className={s.dialogs_items}>\n          <div>{dialogsElements}</div>\n        </div>\n        <div className={s.dialogs_items}>\n          <div>{messagesElements}</div>\n          <AddMessageFormRedux onSubmit={ addNewMessage } />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst AddMessageForm = (props: any) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={s.dialogs_message}>\n        <Field component={textarea} validate={[requiredField, maxLength50]} name={\"newMessageBody\"} placeholder={\"Enter your message\"} />\n      </div>\n      <div className={s.dialogs_send}>\n        <button>Send</button>\n      </div>\n    </form>\n  )\n}\n// @ts-ignore\nconst afterSubmit = (dispatch) =>\n  dispatch(reset('dialogAddMessageForm'));\n\nconst AddMessageFormRedux = reduxForm({\n  form: \"dialogAddMessageForm\",\n  onSubmitSuccess: afterSubmit,\n})(AddMessageForm);\n\nexport default Dialogs;\n","import { actions } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\nimport { compose } from 'redux';\nimport { AppStateType } from '../../redux/redux-store';\nimport { InitialStateType } from '../../redux/dialogsReducer';\n\ntype MapDispatchProps = {\n  \n}\n\ntype MapStateProps = {\n  dialogsPage: InitialStateType\n}\n\ntype OwnProps = {}\n\n\nlet mapStateToProps = (state: AppStateType): MapStateProps => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n}\n\nexport default compose<React.ComponentType>(\n  connect<MapStateProps, MapDispatchProps, OwnProps, AppStateType>(mapStateToProps, {...actions}),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}